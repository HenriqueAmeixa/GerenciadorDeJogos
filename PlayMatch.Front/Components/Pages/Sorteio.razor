@page "/sorteio"
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Sorteio de Times</h3>

@if (JogadoresSelecionados.Any())
{
    <h4>Jogadores Selecionados</h4>
    <ul>
        @foreach (var jogador in JogadoresSelecionados)
        {
            <li>@jogador.Apelido</li>
        }
    </ul>

    <button @onclick="SortearTimes">Sortear Times</button>

    @if (TimesSorteados)
    {
        <h4>Time 1</h4>
        <ul>
            @foreach (var jogador in Time1.Jogadores)
            {
                <li>@jogador.Apelido</li>
            }
        </ul>

        <h4>Time 2</h4>
        <ul>
            @foreach (var jogador in Time2.Jogadores)
            {
                <li>@jogador.Apelido</li>
            }
        </ul>
    }

    <button @onclick="IrParaPartida" disabled="@(!TimesSorteados)">Ir para Partida</button>
}
else
{
    <p>Nenhum jogador selecionado.</p>
}

@code {
    [Parameter] public string? JogadoresQuery { get; set; }
    private List<Jogador> JogadoresSelecionados = new();
    private Time Time1 = new();
    private Time Time2 = new();
    private bool TimesSorteados = false;

    protected override async Task OnInitializedAsync()
    {
        var json = await JS.InvokeAsync<string>("sessionStorage.getItem", "jogadoresSelecionados");
        if (!string.IsNullOrEmpty(json))
        {
            JogadoresSelecionados = System.Text.Json.JsonSerializer.Deserialize<List<Jogador>>(json);
        }
    }

    private void SortearTimes()
    {
        var random = new Random();
        var jogadoresEmbaralhados = JogadoresSelecionados.OrderBy(j => random.Next()).ToList();

        Time1.Jogadores = jogadoresEmbaralhados.Take(jogadoresEmbaralhados.Count / 2).ToList();
        Time2.Jogadores = jogadoresEmbaralhados.Skip(jogadoresEmbaralhados.Count / 2).ToList();

        TimesSorteados = true;
    }

    private async void IrParaPartida()
    {
        await JS.InvokeVoidAsync("sessionStorage.setItem", "Time1", System.Text.Json.JsonSerializer.Serialize(Time1));
        await JS.InvokeVoidAsync("sessionStorage.setItem", "Time2", System.Text.Json.JsonSerializer.Serialize(Time2));
        Navigation.NavigateTo("/gerenciar-partida");
    }
}
