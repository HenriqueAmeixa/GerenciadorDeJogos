@page "/selecao-jogadores"
@inject NavigationManager Navigation
@inject JogadorService JogadorService
@inject IJSRuntime JS

<head>
    <!-- Adicionando o Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<h3>Seleção de Jogadores</h3>

<!-- Lista de Jogadores Disponíveis -->
<h4>Jogadores Disponíveis</h4>
<div class="scroll-view">
    @foreach (var jogador in JogadoresDisponiveis)
    {
        <div class="jogador-item">
            <span>@jogador.Apelido</span>
            <button class="btn btn-primary" @onclick="() => SelecionarJogador(jogador)"><i class="fa-solid fa-plus"></i></button>
        </div>
    }
</div>

<!-- Lista de Jogadores Selecionados -->
<h4>Jogadores Selecionados</h4>
<div class="scroll-view">
    @foreach (var jogador in JogadoresSelecionados)
    {
        <div class="jogador-item">
            <span>@jogador.Apelido</span>
            <button class="btn btn-danger" @onclick="() => RemoverJogador(jogador)"><i class="fa-solid fa-minus"></i></button>
        </div>
    }
</div>

<!-- Botão para Avançar -->
<button class="btn btn-success" @onclick="AvancarParaSorteio">Avançar para Sorteio</button>

@code {
    private List<Jogador> JogadoresDisponiveis = new();
    private List<Jogador> JogadoresSelecionados = new();

    protected override async Task OnInitializedAsync()
    {
        JogadoresDisponiveis = await JogadorService.GetJogadoresAsync();
    }

    private void SelecionarJogador(Jogador jogador)
    {
        if (!JogadoresSelecionados.Contains(jogador))
        {
            JogadoresSelecionados.Add(jogador);
            JogadoresDisponiveis.Remove(jogador);
        }
    }

    private void RemoverJogador(Jogador jogador)
    {
        JogadoresSelecionados.Remove(jogador);
        JogadoresDisponiveis.Add(jogador);
    }

    private async Task AvancarParaSorteio()
    {
        await JS.InvokeVoidAsync("sessionStorage.setItem", "jogadoresSelecionados", System.Text.Json.JsonSerializer.Serialize(JogadoresSelecionados));
        Navigation.NavigateTo("/sorteio");
    }
}
