@page "/rodadas/{rodadaId:int}/relatorio"
@inject RelatorioService RelatorioService
@inject NavigationManager Navigation

@using PlayMatch.Front.Models.Relatorios

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="relatorio-rodada.css" />
</head>

<div class="container">
    <button class="btn-voltar" @onclick="Voltar" title="Voltar">
        <i class="fas fa-arrow-left"></i>
    </button>

    <h3 class="text-primary">Relatório da Rodada</h3>

    @if (relatorio == null)
    {
        <p>Carregando dados da rodada...</p>
    }
    else if (!relatorio.Any())
    {
        <p>Nenhum jogador com gols ou assistências nesta rodada.</p>
    }
    else
    {
        <table class="tabela-relatorio">
            <thead>
                <tr>
                    <th>Jogador</th>
                    <th><i class="fas fa-futbol text-success"></i> Gols</th>
                    <th><i class="fas fa-handshake text-info"></i> Assistências</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var jogador in relatorio)
                {
                    <tr>
                        <td class="nome">@jogador.Apelido</td>
                        <td>@jogador.Gols</td>
                        <td>@jogador.Assistencias</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    [Parameter] public int rodadaId { get; set; }
    private List<RodadaRelatorioJogador>? relatorio;

    protected override async Task OnInitializedAsync()
    {
        relatorio = await RelatorioService.GerarRelatorioRodadaAsync(rodadaId, CancellationToken.None);
    }

    private void Voltar()
    {
        Navigation.NavigateTo($"/rodadas/{rodadaId}/partidas");
    }
}
